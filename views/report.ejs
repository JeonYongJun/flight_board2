<html>
    <head>
        <% include ./head.ejs %>
        <title>EastarJet Daily Flight Report!</title>
        <link href="/stylesheets/board.css" rel="stylesheet" type="text/css"></link>
        <style type="text/css">
            @page{
                size: auto A4 landscape;
                margin: 0.5cm;
                header nav, footer {
                    display: none;
                }
                body {
                    font: 12pt Georgia, "Times New Roman", Times, serif;
                    line-height: 1.3;
                }
            }
        </style>
        <script type="text/javascript" src="https://d3js.org/d3.v4.min.js"></script>
        <script type="text/javascript" src="/javascripts/board_lib.js"></script>
        <script type="text/javascript">
            var report_data = null;
            function init_controls(){
                // initialize control
                d3.json('/code/station',(err,data)=>{
                    //console.log(data);
                    d3.select('#station').append('option')
                            .attr('value','ALL').text('ALL');
                    data.data.recordset.forEach((d)=>{
                        //console.log(d);
                        d3.select('#station').append('option')
                            .attr('value',d.CodeCode).text(d.CodeCode);
                    });
                });
                var today = yyyymmdd(new Date());
                d3.select('#log_date').property('value',today);
                d3.select('#station').property('value','GMP');
                // event for show_list button
                d3.select('#show_list').property('disabled',false);
                d3.select('#print_list').property('disabled',false);
                d3.select('#show_list').on('click',()=>{
                    console.log('show_list');
                    d3.select('#show_list').property('disabled',true);
                    var sel_date = d3.select('#log_date').property('value');
                    var sel_station = d3.select('#station').property('value');
                    var json_url = '/flight_report/'+sel_date+'/'+sel_station;
                    //console.log(json_url);
                    d3.json(json_url,(err,data)=>{
                        //console.log(data);
                        if(err){
                            //console.log(err);
                            //console.log(data);
                            alert('Server Internal Error, please email to system administrator!')
                        }else{
                            //console.log(data.report);
                            report_data = data.report;
                            // make time for sort
                            report_data.recordset.forEach(e=>{
                                if(sel_station == e.RouteFrom){ e.SortTime = e.StandardTimeDeparture; }
                                else if(sel_station == e.RouteTo){ e.SortTime = e.StandardTimeArrival; }
                                else{e.SortTime = e.StandardTimeDeparture;}
                            });
                            $('#report_body').html(make_body(report_data.recordset,sel_station));
                            //process
                        }
                    });
                    // gate process
                    // json_url = '/geneva/'+sel_date.replace(/-/g,'');
                    // d3.json(geneva_url,(err,data)=>{
                    //     console.log(geneva_url);
                    //     geneva = data;
                    // });
                    d3.select('#show_list').property('disabled',false);
                });
            }

            $('document').ready(()=>{
                console.log('ready');
                init_controls();
                d3.select('#print_list').on('click',()=>{ printReport() });
                $('#SortDownFlightNumber').on('click',()=>{
                    console.log('SortDownFlightNumber');
                    var sel_station = d3.select('#station').property('value');
                    $('#report_body').html(make_body(report_data.recordset,sel_station,sort_key='FlightNumber',descending=false));
                });
                $('#SortUpFlightNumber').on('click',()=>{
                    console.log('SortUpFlightNumber');
                    var sel_station = d3.select('#station').property('value');
                    $('#report_body').html(make_body(report_data.recordset,sel_station,sort_key='FlightNumber',descending=true));
                });
                $('#SortDonwACNumber').on('click',()=>{
                    console.log('SortDonwACNumber');
                    var sel_station = d3.select('#station').property('value');
                    $('#report_body').html(make_body(report_data.recordset,sel_station,sort_key='ACNumber',descending=false));
                });
                $('#SortUpACNumber').on('click',()=>{
                    console.log('SortUpACNumber');
                    var sel_station = d3.select('#station').property('value');
                    $('#report_body').html(make_body(report_data.recordset,sel_station,sort_key='ACNumber',descending=true));
                });
                $('#SortDonwSortTime').on('click',()=>{
                    console.log('SortDonwSortTime');
                    var sel_station = d3.select('#station').property('value');
                    $('#report_body').html(make_body(report_data.recordset,sel_station,sort_key='SortTime',descending=false));
                });
                $('#SortUpSortTime').on('click',()=>{
                    console.log('SortUpSortTime');
                    var sel_station = d3.select('#station').property('value');
                    $('#report_body').html(make_body(report_data.recordset,sel_station,sort_key='SortTime',descending=true));
                });
            });

            function make_body(recordset,station,sort_key='FlightNumber',descending=false){
                //console.log(station);
                // Create Main Flight Data
                var body_data = {keys:[]};
                sort_body(recordset,sort_key=sort_key,descending=descending);
                recordset.forEach((e)=>{
                    var record = {};
                    record.key = e.ACNumber + '-' + e.FlightNumber;
                    record.FlightNumber = e.FlightNumber;
                    record.ACNumber = e.ACNumber;
                    record.Route = e.RouteFrom + ' - ' + e.RouteTo;
                    record.ScheduleTime = e.StandardTimeDeparture.slice(11,16) + ' - ' + e.StandardTimeArrival.slice(11,16);
                    record.ActualTime = e.RampIn.slice(11,16) + ' - ' + e.RampOut.slice(11,16);
                    record.Remarks = e.Remarks == null?'':e.Remarks;
                    record.DPTAssist = [];
                    record.ARRAssist = [];
                    record.OnBoard = [];
                    // record.Remarks = e.Remarks;
                    if(e.RouteFrom == station){
                        record.FlightType = 'D';
                    }else if(e.RouteTo == station){
                        record.FlightType = 'A';
                    }else{
                        record.FlightType = 'R';
                    }
                    body_data.keys.push(record.key);
                    body_data[record.key] = record;
                });
                body_data.keys = unique_array(body_data.keys)
                // update ScheduleTime, ActualTime, Main Flight
                recordset.forEach(e=>{
                    if(e.OperationType == null){
                    }else if(e.OperationType == 'B'){
                        if(e.ResponsibilityType == 'M')
                            body_data[e.ACNumber+'-'+e.FlightNumber].OnBoard.unshift(e.EmpName);
                        else
                            body_data[e.ACNumber+'-'+e.FlightNumber].OnBoard.push(e.EmpName);
                    }else{
                        if(e.OperationType == body_data[e.ACNumber+'-'+e.FlightNumber].FlightType || body_data[e.ACNumber+'-'+e.FlightNumber].FlightType == 'R'){
                            if(e.OperationType == 'D')
                                if(e.ResponsibilityType == 'M')
                                    body_data[e.ACNumber+'-'+e.FlightNumber].DPTAssist.unshift(e.EmpName);
                                else
                                    body_data[e.ACNumber+'-'+e.FlightNumber].DPTAssist.push(e.EmpName);
                            else if(e.OperationType == 'A')
                                if(e.ResponsibilityType == 'M')
                                    body_data[e.ACNumber+'-'+e.FlightNumber].ARRAssist.unshift(e.EmpName);
                                else
                                    body_data[e.ACNumber+'-'+e.FlightNumber].ARRAssist.push(e.EmpName);
                        }
                    }
                });
                // make table body
                return body_data.keys.map((k)=>{
                    var r = body_data[k];
                    return `<tr><th scope="row">ZE${r.FlightNumber}</th><td>${r.Route}</td><td>${r.ACNumber}</td>
                            <td>${r.ScheduleTime}</td><td>${r.ActualTime}</td><td>${r.DPTAssist.join(',')}</td>
                            <td>${r.ARRAssist.join(',')}</td><td>${r.OnBoard.join(',')}</td><td>${r.Remarks}</td></tr>`}
                   ).join();
                }

                function sort_body(recordset,sort_key='FlightNumber',descending=false){
                    recordset.sort((a,b) => {
                        var s = a[sort_key] < b[sort_key] ? -1 : a[sort_key] > b[sort_key] ? 1 : 0;
                        if(descending){ return -s;}
                        else{ return s; }
                    });
                }

                function printReport() {
                    const html = document.querySelector('html');
                    document.querySelector('#print_body').innerHTML = document.querySelector('#report_body').innerHTML;
                    const printTable = document.querySelector('#print_table').innerHTML;

                    const printDiv = document.createElement("DIV");
                    printDiv.className = "container-fluid";
                    
                    html.appendChild(printDiv);
                    printDiv.innerHTML = printTable;
                    document.body.style.display = 'none';
                    window.print();
                    document.body.style.display = 'block';
                    printDiv.style.display = 'none';
                }
        </script>
    </head>
    <body>
    <div class="container-fluid">
        <% include ./menu.ejs %>
        <div id="controls form-inline" class="form-group">
            <label for="log_date">Date</label>
            <input type="date" id="log_date" name="log_date">
            <label for="station">Station</label>
            <select id="station" name="station"></select>
            <button id="show_list" disabled=true class="btn btn-primary btn-sm navbar-btn">show</button>
            <button id="print_list" disabled=true class="btn btn-primary btn-sm navbar-btn">print</button>
        </div>
        <div id='report_table'>
        <table class="table table-striped table-hover">
            <thead>
            <tr id="report_head">
                <th>Flight # <span class="glyphicon glyphicon-triangle-bottom d-print-none" aria-hidden="true" id="SortDownFlightNumber">
                </span><span class="glyphicon glyphicon-triangle-top" aria-hidden="true"  id="SortUpFlightNumber"></span></th>
                <th>Route</th>
                <th>A/C # <span class="glyphicon glyphicon-triangle-bottom d-print-none" aria-hidden="true" id="SortDonwACNumber"></span>
                <span class="glyphicon glyphicon-triangle-top" aria-hidden="true" id="SortUpACNumber"></span></th>
                <th>Schedule Time <span class="glyphicon glyphicon-triangle-bottom d-print-none" aria-hidden="true" id="SortDonwSortTime"></span>
                <span class="glyphicon glyphicon-triangle-top" aria-hidden="true" id="SortUpSortTime"></span></th>
                <th>Actual Time</th>
                <th>DPT Assist</th>
                <th>ARR Assist</th>
                <th>On-Board</th>
                <th>Remark</th>
            </tr>
            </thead>
            <tbody id="report_body">
            </tbody>
        </table>
        </div>
        <div id='print_table' style='display:none'>
        <table class="table table-striped table-hover" style='width:1150px'>
            <thead>
            <tr id="print_head">
                <th>Flight #</th>
                <th>Route</th>
                <th>A/C #</th>
                <th>Schedule Time</th>
                <th>Actual Time</th>
                <th>DPT Assist</th>
                <th>ARR Assist</th>
                <th>On-Board</th>
                <th>Remark</th>
            </tr>
            </thead>
            <tbody id="print_body">
            </tbody>
        </table>
        </div>
    </div>
    <footer class="footer">
		<div class="container">
		  <p class="text-muted">이스타항공 정비본부, 시스템 관리자 : 오영진(puniculla@eastarjet.com,8093)
			.</p>
		</div>
    </footer>
    </body>
    <% include ./tail.ejs %>
</html>